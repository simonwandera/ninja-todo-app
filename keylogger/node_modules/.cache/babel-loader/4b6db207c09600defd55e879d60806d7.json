{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState();\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error('Could not fetch the data for the resourse');\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('fetch aborted');\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      });\n    }, 100);\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"KT93PefKpyGr7HUih6w5jxurxjA=\");\n\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["/home/simon/Documents/keylogger_project/keylogger/src/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) =>{\n\n    const [data, setData] = useState();\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n        setTimeout(() => {\n            fetch(url, {signal: abortCont.signal})\n                .then(res => {\n                    if(!res.ok){\n                        throw Error('Could not fetch the data for the resourse');\n                    }\n                    return res.json();\n                })\n                .then(data => {\n                    setData(data);\n                    setIsPending(false);\n                    setError(null)\n                })\n                .catch(err =>{\n                    if(err.name === 'AbortError'){\n                        console.log('fetch aborted')\n                    } else{\n                        setIsPending(false)\n                        setError(err.message);\n                    }\n                })\n        }, 100);\n        return () => abortCont.abort();\n    }, [url]);\n    return {data, isPending, error}\n}\n\nexport default useFetch"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAQ;EAAA;;EAErB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,IAAIC,eAAJ,EAAlB;IACAC,UAAU,CAAC,MAAM;MACbC,KAAK,CAACV,GAAD,EAAM;QAACW,MAAM,EAAEJ,SAAS,CAACI;MAAnB,CAAN,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;QACT,IAAG,CAACA,GAAG,CAACC,EAAR,EAAW;UACP,MAAMC,KAAK,CAAC,2CAAD,CAAX;QACH;;QACD,OAAOF,GAAG,CAACG,IAAJ,EAAP;MACH,CANL,EAOKJ,IAPL,CAOUX,IAAI,IAAI;QACVC,OAAO,CAACD,IAAD,CAAP;QACAG,YAAY,CAAC,KAAD,CAAZ;QACAE,QAAQ,CAAC,IAAD,CAAR;MACH,CAXL,EAYKW,KAZL,CAYWC,GAAG,IAAG;QACT,IAAGA,GAAG,CAACC,IAAJ,KAAa,YAAhB,EAA6B;UACzBC,OAAO,CAACC,GAAR,CAAY,eAAZ;QACH,CAFD,MAEM;UACFjB,YAAY,CAAC,KAAD,CAAZ;UACAE,QAAQ,CAACY,GAAG,CAACI,OAAL,CAAR;QACH;MACJ,CAnBL;IAoBH,CArBS,EAqBP,GArBO,CAAV;IAsBA,OAAO,MAAMf,SAAS,CAACgB,KAAV,EAAb;EACH,CAzBQ,EAyBN,CAACvB,GAAD,CAzBM,CAAT;EA0BA,OAAO;IAACC,IAAD;IAAOE,SAAP;IAAkBE;EAAlB,CAAP;AACH,CAjCD;;GAAMN,Q;;AAmCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}